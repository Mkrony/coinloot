import React, { useState, useEffect } from 'react';

const OffersComponent = () => {
    const [offers, setOffers] = useState([]);
    const [loading, setLoading] = useState(true);

    const fetchOffers = async (retryCount = 0) => {
        try {
            const response = await fetch(`https://notik.me/api/v2/get-top-converting-offers?api_key=6wfvXNHicQEn9Z30of3IOg1n5ppblxDj&pub_id=vRzPiG&app_id=XO8QDH0Jqm`);

            if (response.status === 429) {
                if (retryCount < 3) {
                    console.log('Rate limit exceeded. Retrying in 60 seconds...');
                    setTimeout(() => fetchOffers(retryCount + 1), 60000); // Wait 60 seconds before retrying
                } else {
                    console.error('Max retry attempts reached. Please try again later.');
                    setLoading(false);
                }
                return;
            }

            const data = await response.json();
            console.log(data)

            setOffers(data.offers.data || []); // Ensure offers are retrieved
        } catch (error) {
            console.error('Error fetching offers:', error);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchOffers();
    }, []);

    return (
        <div className="offers-container">
            {loading ? (
                <p>Loading offers...</p>
            ) : (
                <div className="offers-grid">
                    {offers.map((offer, index) => (
                        <div key={index} className="offer-card">
                            <h3 className="offer-title">{offer.name}</h3>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
};

export default OffersComponent;
